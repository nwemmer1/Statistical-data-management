library(MASS)
attach(bacteria)
fix(bacteria)
y <- c (6,7,3,4,8,5,6,2)
# 3.1 Data input from the keyboard
x <-scan()
y <- c (6,7,3,4,8,5,6,2)
# 3.1 Data input from the keyboard
x <-scan()
y <- c (6,7,3,4,8,5,6,2)
# 3.1 Data input from the keyboard
x <-scan()
setwd("c:\\temp")
setwd("C:\Users\Nathan\Desktop\Important Docs\school\stats db\therbook")
setwd("Users\Nathan\Desktop\Important Docs\school\stats db\therbook")
setwd("..\Users\Nathan\Desktop\Important Docs\school\stats db\therbook")
y <- c (6,7,3,4,8,5,6,2)
# 3.1 Data input from the keyboard
x <-scan()
setwd("..\Users\Nathan\Desktop\Important Docs\school\stats db\therbook")
setwd("../therbook")
setwd("..\therbook")
setwd("..\stats db\therbook")
setwd("\therbook")
setwd("therbook")
setwd("~/therbook")
y <- c (6,7,3,4,8,5,6,2)
# 3.1 Data input from the keyboard
x <-scan()
mine<-getwd()
setwd("C:\Users\Nathan\Desktop\Important Docs\school\stats db\therbook")
setwd(mine)
y <- c (6,7,3,4,8,5,6,2)
# 3.1 Data input from the keyboard
x <-scan()
y <- c (6,7,3,4,8,5,6,2)
# 3.1 Data input from the keyboard
x <-scan()
setwd("~/therbook")
getwd()
setwd("\therbook")
setwd("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook")
mine<-getwd()
setwd("C:\Users\Nathan\Desktop\Important Docs\school\stats db\therbook")
setwd(mine)
setwd("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook")
data<-read.table(file.choose(),header=T)
# 3.2 Data input from files
# 3.2.1 The working directory
# setwd("F:/JunYe_Files/Jun_2016Spring_Course/Spring2016_Advanced_Computinbg/therbook")
setwd("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook")
getwd()
# 3.2.2 Data input using read.table
setwd("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook")
data <- read.table("yields.txt",header=T)
head(data)
data <- read.delim("yields.txt")
rt <- function(x) read.table(paste("c:\\temp\\",x,".txt",sep=""),
header=TRUE)
data <- rt("yields.txt")
data <- read.delim("yields.txt")
rt <- function(x) read.table(paste("c:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook",x,".txt",sep=""),
header=TRUE)
data <- rt("yields.txt")
# 3.2.3 Common errors when using read.table
map <- read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/bowens.csv",header=T,sep=",")
# 3.2.4 Separators and decimal points
murder <- read.table("c:\\temp\\murders.txt",header=T,as.is="region")
# 3.2.3 Common errors when using read.table
map <- read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/bowens.csv",header=T,sep=",")
# 3.2.4 Separators and decimal points
murder <- read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/murders.txt",header=T,as.is="region")
# 3.2.5 Data input directly from the web
data2 <- read.table("http://www.bio.ic.ac.uk/research/mjcraw/therbook/data/cancer.txt",header=T)
head(data2)
# 3.3 Input from files using scan
read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt")
#scan("t:\\data\\worms.txt",skip=1,what=as.list(rep("",7)))
scan("worms.txt",skip=1,what=as.list(rep("",7)))
#data <-as.data.frame(scan("t:\\data\\worms.txt",skip=1,what=as.list(rep("",7))))
data <-as.data.frame(scan("worms.txt",skip=1,what=as.list(rep("",7))))
names(data)<-header
head(data)
# 3.3.2 Input from more complex file structures using scan
scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt")
scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\n")
scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t")
length(scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\n"))
length(scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t"))
length(scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\n"))
length(scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t"))
scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t")[1:4]
as.numeric(na.omit(scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t",quiet=T)[1:4]))
sapply(1:5, function(i)
as.numeric(na.omit(
scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t",quiet=T)[(4*i-3):
(4*i)])))
# 3.4.1 Input a dataframe using readLines
line<-readLines("worms.txt")
line
db<-strsplit(line,"\t")
db
bb<-unlist(db)
dim(bb)<-c(7,21)
bb
t(bb)[-1,]
frame<-as.data.frame(t(bb)[-1,])
head(frame)
names(frame)<-t(bb)[1,]
head(frame)
# 3.4.2 Reading non-standard files using readLines
readLines("c:\\temp\\rt.txt")
# 3.4.2 Reading non-standard files using readLines
readLines("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt")
strsplit(readLines("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt"),"\t")
strsplit(readLines("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt"),"\n")
rows<-lapply(strsplit(readLines("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt"),"\t"),as.numeric)
rows
sapply(1:5, function(i) as.numeric(na.omit(rows[[i]])))
murder <- read.table("c:\\temp\\murders.txt",header=T,as.is="region")
murder <- read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/murders.txt",header=T,as.is="region")
attach(murder)
head(murder)
table(region)
table(murder$region)
z <- 10
z <- 2.5
################################################################
# 3.7 Input and output formats
################################################################
data<-read.table("c:\\temp\\catdata.txt",header=T)
################################################################
# 3.7 Input and output formats
################################################################
data<-read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/catdata.txt",header=T)
attach(data)
names(data)
model<-lm(y~soil)
summary.aov(model)
df1<-unlist(summary.aov(model)[[1]] [1])[1]
df2<-unlist(summary.aov(model)[[1]] [1])[2]
ss1<-unlist(summary.aov(model)[[1]] [2])[1]
ss2<-unlist(summary.aov(model)[[1]] [2])[2]
{cat("ANOVA table","\n")
cat("Source","\t\t","SS","\t","d.f.","\t","MS","\t\t","F","\n")
cat("Treatment","\t",ss1,"\t",df1,"\t",ss1/df1,"\t\t",
(ss1/df1)/(ss2/df2),"\n")
cat("Error","\t\t",ss2,"\t",df2,"\t",ss2/df2,"\n")
cat("Total","\t\t",ss1 + ss2,"\t",df1 + df2,"\n")}
x <-scan()
setwd("\therbook")
plot(cars)
x <-scan()
setwd("\therbook")
y <- c (6,7,3,4,8,5,6,2)
x <-scan()
setwd("C:\Users\Nathan\Desktop\Important Docs\school\stats db\therbook")
y <- c (6,7,3,4,8,5,6,2)
x <-scan()
y <- c (6,7,3,4,8,5,6,2)
x <-scan()
setwd("c:\Users\Nathan\Desktop\Important Docs\school\stats db\therbook")
setwd("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook")
getwd()
setwd("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook")
data <- read.table("yields.txt",header=T)
head(data)
data <- read.delim("yields.txt")
rt <- function(x) read.table(paste("c:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook",x,".txt",sep=""),
header=TRUE)
data <- rt("yields.txt")
setwd("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook")
map <- read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/bowens.csv",header=T,sep=",")
murder <- read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/murders.txt",header=T,as.is="region")
data2 <- read.table("http://www.bio.ic.ac.uk/research/mjcraw/therbook/data/cancer.txt",header=T)
head(data2)
read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt")
scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt")
scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\n")
scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t")
length(scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\n"))
length(scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t"))
scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t")[1:4]
as.numeric(na.omit(scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t",quiet=T)[1:4]))
sapply(1:5, function(i)
as.numeric(na.omit(
scan("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/rt.txt",sep="\t",quiet=T)[(4*i-3):
(4*i)])))
line<-readLines("worms.txt")
line
db<-strsplit(line,"\t")
db
bb<-unlist(db)
dim(bb)<-c(7,21)
bb
t(bb)[-1,]
frame<-as.data.frame(t(bb)[-1,])
head(frame)
names(frame)<-t(bb)[1,]
head(frame)
murder <- read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/murders.txt",header=T,as.is="region")
attach(murder)
head(murder)
table(region)
table(murder$region)
z <- 10
z <- 2.5
data<-read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/catdata.txt",header=T)
data<-read.table("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/catdata.txt",header=F)
file.exists("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/Decay.txt")
setwd("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/catdata.txt/thesis/chapter1/data")
setwd("C:/Users/Nathan/Desktop/Important Docs/school/stats db/therbook/thesis/chapter1/data")
file(description = "", open = "", blocking = TRUE,
encoding = getOption("encoding"), raw = FALSE)
install.packages("RODBC")
library(RODBC)
channel <- odbcConnect("northwind")
query <- "SELECT * FROM Categories"
stock <- sqlQuery(channel, query)
arithmetic.mean <- function(x) sum(x)/length(x)
y <- c(3,3,4,5,5)
arithmetic.mean(y)
# there is a built-in function for arithmetic means called mean
mean(y)
med <- function(x) {
odd.even <- length(x)%%2
if (odd.even == 0) (sort(x)[length(x)/2]+sort(x)[1+ length(x)/2])/2
else sort(x)[ceiling(length(x)/2)]
}
med(y)
med(y[-1])
med <- function(x) ifelse(length(x)%%2==1, sort(x)[ceiling(length(x)/2)],
(sort(x)[length(x)/2]+sort(x)[1+ length(x)/2])/2 )
100000^0.2
insects <- c(1,10,1000,10,1)
mean(insects)
exp(mean(log(insects)))
geometric <- function (x) exp(mean(log(x)))
geometric(insects)
harmonic <- function (x) 1/mean(1/x)
harmonic(c(1,2,4,1))
y <- c(13,7,5,12,9,15,6,11,9,7,12)
variance <- function(x) sum((x - mean(x))^2)/(length(x)-1)
variance(y)
var(y)
variance.ratio <- function(x,y) {
v1 <- var(x)
v2 <- var(y)
if (var(x) > var(y)){
vr <- var(x)/var(y)
df1 <- length(x)-1
df2 <- length(y)-1}
else {
vr <- var(y)/var(x)
df1 <- length(y)-1
df2 <- length(x)-1}
2*(1-pf(vr,df1,df2)) }
a <- rnorm(10,15,2)
b <- rnorm(10,15,4)
variance.ratio(a,b)
# We can compare our p with the p value given by the built-in function called var.test:
var.test(a,b)
se <- function(x) sqrt(var(x)/length(x))
ci95 <- function(x) {
t.value <- qt(0.975,length(x)-1)
standard.error <- se(x)
ci <- t.value*standard.error
cat("95 Confidence Interval = ", mean(x) -ci, "to ", mean(x) +ci,"\n") }
x <- rnorm(150,25,3)
ci95(x)
xv <- rnorm(30)
sem <- numeric(30)
sem[1] <- NA
for(i in 2:30) sem[i] <- se(xv[1:i])
plot(1:30,sem,ylim=c(0,0.8),
ylab="standard error of mean",xlab="sample size n",pch=16)
xv <- rnorm(30)
sem <- numeric(30)
sem[1] <- NA
for(i in 2:30) sem[i] <- se(xv[1:i])
plot(1:30,sem,ylim=c(0,0.8),
ylab="standard error of mean",xlab="sample size n",pch=16)
lines(2:30,1/sqrt(2:30))
error.bars <- function(yv,z,nn){
xv <-
barplot(yv,ylim=c(0,(max(yv)+max(z))),names=nn,ylab=deparse(substitute(yv)
))
g=(max(xv)-min(xv))/50
for (i in 1:length(xv)) {
lines(c(xv[i],xv[i]),c(yv[i]+z[i],yv[i]-z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]+z[i], yv[i]+z[i]))
lines(c(xv[i]-g,xv[i]+g),c(yv[i]-z[i], yv[i]-z[i]))
}}
comp <- read.table("competition.txt",header=T)
central <- function(y, measure) {
switch(measure,
Mean = mean(y),
Geometric = exp(mean(log(y))),
Harmonic = 1/mean(1/y),
Median = median(y),
stop("Measure not included")) }
central(rnorm(100,10,2),"Harmonic")
central(rnorm(100,10,2),4)
charplot <- function(x,y,pc=16,co="red"){
plot(y~x,pch=pc,col=co)}
charplot(1:10,1:10)
plot(y~x,pch=pc,col=co)
many.means <- function ( ...) {
data <- list( ...)
n <- length(data)
means <- numeric(n)
vars <- numeric(n)
for (i in 1:n) {
means[i] <- mean(data[[i]])
vars[i] <- var(data[[i]])
}
print(means)
print(vars)
invisible(NULL)
}
x <- rnorm(100)
y <- rnorm(200)
z <- rnorm(300)
many.means(x,y,z)
parmax <- function (a,b) {
c <- pmax(a,b)
median(c) }
x <- c(1,9,2,8,3,7)
y <- c(9,2,8,3,7,2)
parmax(x,y)
parboth <- function (a,b) {
c <- pmax(a,b)
d <- pmin(a,b)
answer <- list(median(c),median(d))
names(answer)[[1]] <- "median of the parallel maxima"
names(answer)[[2]] <- "median of the parallel minima"
return(answer) }
parboth(x,y)
(function(x,y){ z <- 2* x^2 + y^2; x+y+z })(0:7, 1)
# 2.15.17 Flexible handling of arguments to functions
plotx2 <- function (x, y = z^2) {
z <- 1:x
plot(z,y,type="l") }
windows(7,4)
par(mfrow=c(1,2))
plotx2(12)
plotx2(12,1:12)
(y <- seq(0.9,0.3,-0.1))
str(y)
#data <- read.table("c:\\temp\\spino.txt",header=T)
data <- read.table("spino.txt",header=T)
# 2.16.2 Saving history
history(Inf)
savehistory(file = "session18.txt")
